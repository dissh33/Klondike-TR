@using KlondikeTR.Interfaces
@using Items.Api.Dtos
@using KlondikeTR.Helpers

@implements IDisposable

@inject IItemsService ItemsService


<div class="container ms-0 d-flex flex-column border border-1 border-dark bg-dark">
    <p class="text-light fs-3 fw-light m-2 mb-0">Available Items</p>
    <hr class="bg-light m-1 mt-0"/>
    
    <p class="text-light fs-5 m-1 mt-3 mb-0">Collections</p>
    <div class="d-flex flex-row">
        @foreach (var item in _groupedItems.Collections)
        {
            <Item ItemDto="@item" />
        }
    </div>
    
    <p class="text-light fs-5 m-1 mt-3 mb-0">Materials</p>
    <div class="d-flex flex-row">
        @foreach (var item in _groupedItems.Materials)
        {
            <Item ItemDto="@item" />
        }
    </div>
</div>

@code {
    private readonly CancellationTokenSource _cts = new();

    private GroupedTradableItemsDto _groupedItems = new();

    protected override async Task OnInitializedAsync()
    {
        _groupedItems = await ItemsService.GetAllAvailableItems(_cts.Token);
    }

    public void Dispose()
    {
        _cts.Cancel();
        _cts.Dispose();
    }
}
